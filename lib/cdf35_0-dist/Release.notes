/-----------------------------------/
/  CDF V3.5.0.2 Release Notes       /
/-----------------------------------/

1. Compatibility with CDF 3.4.*, 3.3.*, 3.2, 3.1 , 2.7.2 and Earlier Versions

CDF V3.5.0 is backward compatible with the previous versions of CDF, and it 
can read CDF files that were created with earlier versions.

If a file was created with CDF 2.7 and read and modified by CDF 3.*, the 
resultant file will be saved in the CDF 2.7 format, not CDF 3.*.  The same 
principle applies to files that were created with CDF 2.5 and 2.6.  CDF 
files that are created from scratch with CDF V3.5.0 are compatible in file
structure with all CDF 3.*, but not compatible (due to a 64-bit file offsets
used since CDF 3.0 versions) with CDF 2.7.2 or earlier, and an attempt to
read CDF 3.* files from CDF 2.7.2 or earlier will produce an error. Since a
couple of new data types bad been added in V3.4, applications based on V3.3.*
and earilier will not be able access the V3.4 and later files if the files 
have the data in those new types. However, if the files of V3.4 and later do 
not contain data of the new data types, V3.*-based applications should have no 
problems accessing them.   

Users of CDF 3.1 or later versions will be able to create CDF files that 
can be read by CDF 2.7.2 or earlier by using the CDFsetFileBackward function 
(in C) or CDF_set_FileBackward subroutine  (in Fortran), or using the
CDF_FILEBACKWARD environment variable on Unix/Linux (including Mac OS X) or 
PC, or CDF$FILEBACKWARD on OpenVMS.  See Section 4.18 of the CDF C 
Reference Manual and the CDF Fortran Reference Manual for details on how to 
create CDF 2.7-compatible files.

All features added to the previous releases are included. Refer to the release 
notes from the previous versions to view the specific features pertaining
to that release.

2. Changes

The following changes have been made/added:

   * The open source zlib (Version 1.2.8) is used as is to replace the GZIP
     compression/decompression code implemented in the earlier versions. 
   * Added support for NaN, Inf and -Inf for floating point values.
   * A few bugs were fixed.
   * Modified the default encoding to Host when a new CDF is created.
   * Fixed the minor memory leaks in the core and JNI libraries.
   * Modified the blocking factor to improve the performance.
   * Modified the default pad values from 0 or 0.0, which could be valid, to
     something noticeables. Fill space(s) if the string-type value with less
     than the defined variable is passed in when setting the pad value.
   * Added some new features in the tool programs.
   * Added support for Visual Basic on Windows.

Please refer to CHANGES.txt for the dtailed code changes in various versions.

3. How to Obtain the Latest Software 

   Go to the CDF home page (http://cdf.gsfc.nasa.gov) and click the
   Download CDF Software link.
   

4. Documentation

The CDF documentation set consists of the following:

        cdf350ug.pdf   (CDF User's Guide)
        cdf350crm.pdf  (CDF C Reference Manual)
        cdf350frm.pdf  (CDF Fortran Reference Manual)
        cdf350prm.pdf  (CDF Perl Reference Manual)
        cdf350jrm.pdf  (CDF Java Reference Manual)
        cdf350csrm.pdf (CDF C# Reference Manual)
        cdf350vbrm.pdf (CDF Visual Basic Reference Manual)
        cdf35ifd.pdf   (CDF Internal Format Description)

These documents are available from the CDF home page (http://cdf.gsfc.nasa.gov).

We have a user support office for CDF that you can contact when you need an
assistance.  For requests, please send emails to:

  Internet -- gsfc-cdf-support@lists.nasa.gov

Please let us know (via an email to CDFSUPPORT) if you get the distribution.
We would like to know who has the distribution so we know who to contact
when updates are available.

CDFsupport
